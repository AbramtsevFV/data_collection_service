[{"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2021-09-02T12:33:03.942Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "Suvenir", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2021-09-02T12:33:14.195Z", "user": 1, "content_type": 8, "object_id": "1", "object_repr": "Ford", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2021-09-02T16:45:49.389Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "AbramtsevFV", "action_flag": 3, "change_message": ""}}, {"model": "auth.permission", "pk": 1, "fields": {"name": "Can add log entry", "content_type": 1, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change log entry", "content_type": 1, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete log entry", "content_type": 1, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can view log entry", "content_type": 1, "codename": "view_logentry"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can add permission", "content_type": 2, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can change permission", "content_type": 2, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can delete permission", "content_type": 2, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can view permission", "content_type": 2, "codename": "view_permission"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can add group", "content_type": 3, "codename": "add_group"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can change group", "content_type": 3, "codename": "change_group"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can delete group", "content_type": 3, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can view group", "content_type": 3, "codename": "view_group"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add user", "content_type": 4, "codename": "add_user"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change user", "content_type": 4, "codename": "change_user"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete user", "content_type": 4, "codename": "delete_user"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can view user", "content_type": 4, "codename": "view_user"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can add content type", "content_type": 5, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can change content type", "content_type": 5, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can delete content type", "content_type": 5, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can view content type", "content_type": 5, "codename": "view_contenttype"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can add session", "content_type": 6, "codename": "add_session"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can change session", "content_type": 6, "codename": "change_session"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can delete session", "content_type": 6, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can view session", "content_type": 6, "codename": "view_session"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Can add Имя пользователя", "content_type": 7, "codename": "add_usermodels"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can change Имя пользователя", "content_type": 7, "codename": "change_usermodels"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can delete Имя пользователя", "content_type": 7, "codename": "delete_usermodels"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can view Имя пользователя", "content_type": 7, "codename": "view_usermodels"}}, {"model": "auth.permission", "pk": 29, "fields": {"name": "Can add Репозиторий", "content_type": 8, "codename": "add_repomodels"}}, {"model": "auth.permission", "pk": 30, "fields": {"name": "Can change Репозиторий", "content_type": 8, "codename": "change_repomodels"}}, {"model": "auth.permission", "pk": 31, "fields": {"name": "Can delete Репозиторий", "content_type": 8, "codename": "delete_repomodels"}}, {"model": "auth.permission", "pk": 32, "fields": {"name": "Can view Репозиторий", "content_type": 8, "codename": "view_repomodels"}}, {"model": "auth.user", "pk": 1, "fields": {"password": "pbkdf2_sha256$260000$uHD9RddYuqhCHjrx8I7iju$qKuDxIIdAo8aiG5yUxOBkijSfbSbUWznnlbC9C9PbEY=", "last_login": "2021-09-02T12:32:54.849Z", "is_superuser": true, "username": "admin", "first_name": "", "last_name": "", "email": "admin@admin.ru", "is_staff": true, "is_active": true, "date_joined": "2021-09-02T12:32:25.300Z", "groups": [], "user_permissions": []}}, {"model": "contenttypes.contenttype", "pk": 1, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 2, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 3, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 4, "fields": {"app_label": "auth", "model": "user"}}, {"model": "contenttypes.contenttype", "pk": 5, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 6, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "contenttypes.contenttype", "pk": 7, "fields": {"app_label": "service", "model": "usermodels"}}, {"model": "contenttypes.contenttype", "pk": 8, "fields": {"app_label": "service", "model": "repomodels"}}, {"model": "sessions.session", "pk": "5a7lnul1mgi33ms2kkl8x1vzkl0otbrw", "fields": {"session_data": ".eJxVjDsOwjAQBe_iGll24i8lPWew1t5dHECOFCcV4u4QKQW0b2beSyTY1pq2TkuaUJyFFqffLUN5UNsB3qHdZlnmti5TlrsiD9rldUZ6Xg7376BCr9_a2IEVBLToySiOBDYGzwiD4VFz5kBhdNq7qMEX5Ew6O1cMZeKoFYn3B_ibONg:1mLltm:K1jshqIrnT4UxgvFk8v8IH8ynVGu5keyTpKB2r00nMA", "expire_date": "2021-09-16T12:32:54.946Z"}}, {"model": "service.usermodels", "pk": 3, "fields": {"name": "kubernetes"}}, {"model": "service.usermodels", "pk": 4, "fields": {"name": "AbramtsevFV"}}, {"model": "service.repomodels", "pk": 8, "fields": {"name": 3, "repo": ".github", "read_me": "# .github\n\nThis repo contains org-wide default [community-health check files](https://docs.github.com/en/github/building-a-strong-community/creating-a-default-community-health-file#supported-file-types).\n\nCurrently, this repo only contains the org-wide default `SECURITY.md` file.\nAll other template files are located at https://github.com/kubernetes/kubernetes-template-project.\n\n## Community, discussion, contribution, and support\n\nLearn how to engage with the Kubernetes community on the [community page](http://kubernetes.io/community/).\n\nYou can reach the maintainers of this project at:\n\n- [Slack](https://kubernetes.slack.com/messages/sig-contribex)\n- [Mailing List](https://groups.google.com/forum/#!forum/kubernetes-sig-contribex)\n\n### Code of conduct\n\nParticipation in the Kubernetes community is governed by the [Kubernetes Code of Conduct](code-of-conduct.md).", "created": "2020-08-07T11:50:55Z"}}, {"model": "service.repomodels", "pk": 9, "fields": {"name": 3, "repo": "api", "read_me": "# api\n\nSchema of the external API types that are served by the Kubernetes API server.\n\n## Purpose\n\nThis library is the canonical location of the Kubernetes API definition. Most likely interaction with this repository is as a dependency of client-go.\n\nIt is published separately to avoid diamond dependency problems for users who\ndepend on more than one of `k8s.io/client-go`, `k8s.io/apimachinery`,\n`k8s.io/apiserver`...\n\n## Recommended Use\n\nWe recommend using the go types in this repo. You may serialize them directly to\nJSON.\n\nIf you want to store or interact with proto-formatted Kubernetes API objects, we\nrecommend using the \"official\" serialization stack in `k8s.io/apimachinery`.\nDirectly serializing these types to proto will not result in data that matches\nthe wire format or is compatible with other kubernetes ecosystem tools. The\nreason is that the wire format includes a magic prefix and an envelope proto.\nPlease see:\nhttps://kubernetes.io/docs/reference/using-api/api-concepts/#protobuf-encoding\n\nFor the same reason, we do not recommend embedding these proto objects within\nyour own proto definitions. It is better to store Kubernetes objects as byte\narrays, in the wire format, which is self-describing. This permits you to use\neither JSON or binary (proto) wire formats without code changes. It will be\ndifficult for you to operate on both Custom Resources and built-in types\notherwise.\n\n## Compatibility\n\nBranches track Kubernetes branches and are compatible with that repo.\n\n## Where does it come from?\n\n`api` is synced from https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/api. Code changes are made in that location, merged into `k8s.io/kubernetes` and later synced here.\n\n## Things you should *NOT* do\n\n1. https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/api is synced to k8s.io/api. All changes must be made in the former. The latter is read-only.", "created": "2017-06-06T20:31:13Z"}}, {"model": "service.repomodels", "pk": 10, "fields": {"name": 3, "repo": "apiextensions-apiserver", "read_me": "# apiextensions-apiserver\n\nImplements: https://github.com/kubernetes/community/blob/master/contributors/design-proposals/api-machinery/thirdpartyresources.md\n\nIt provides an API for registering `CustomResourceDefinitions`.\n\n## Purpose\n\nThis API server provides the implementation for `CustomResourceDefinitions` which is included as\ndelegate server inside of `kube-apiserver`.\n\n\n## Compatibility\n\nHEAD of this repo will match HEAD of k8s.io/apiserver, k8s.io/apimachinery, and k8s.io/client-go.\n\n## Where does it come from?\n\n`apiextensions-apiserver` is synced from https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiextensions-apiserver.\nCode changes are made in that location, merged into `k8s.io/kubernetes` and later synced here.", "created": "2017-06-12T15:39:12Z"}}, {"model": "service.repomodels", "pk": 11, "fields": {"name": 3, "repo": "apimachinery", "read_me": "# apimachinery\n\nScheme, typing, encoding, decoding, and conversion packages for Kubernetes and Kubernetes-like API objects.\n\n\n## Purpose\n\nThis library is a shared dependency for servers and clients to work with Kubernetes API infrastructure without direct\ntype dependencies. Its first consumers are `k8s.io/kubernetes`, `k8s.io/client-go`, and `k8s.io/apiserver`.\n\n\n## Compatibility\n\nThere are *NO compatibility guarantees* for this repository. It is in direct support of Kubernetes, so branches\nwill track Kubernetes and be compatible with that repo. As we more cleanly separate the layers, we will review the\ncompatibility guarantee.\n\n\n## Where does it come from?\n\n`apimachinery` is synced from https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery.\nCode changes are made in that location, merged into `k8s.io/kubernetes` and later synced here.\n\n\n## Things you should *NOT* do\n\n 1. Add API types to this repo. This is for the machinery, not for the types.\n 2. Directly modify any files under `pkg` in this repo. Those are driven from `k8s.io/kubernetes/staging/src/k8s.io/apimachinery`.\n 3. Expect compatibility. This repo is direct support of Kubernetes and the API isn't yet stable enough for API guarantees.", "created": "2017-01-09T19:14:14Z"}}, {"model": "service.repomodels", "pk": 12, "fields": {"name": 3, "repo": "apiserver", "read_me": "# apiserver\n\nGeneric library for building a Kubernetes aggregated API server.\n\n\n## Purpose\n\nThis library contains code to create Kubernetes aggregation server complete with delegated authentication and authorization,\n`kubectl` compatible discovery information, optional admission chain, and versioned types.  It's first consumers are\n`k8s.io/kubernetes`, `k8s.io/kube-aggregator`, and `github.com/kubernetes-incubator/service-catalog`.\n\n\n## Compatibility\n\nThere are *NO compatibility guarantees* for this repository, yet.  It is in direct support of Kubernetes, so branches\nwill track Kubernetes and be compatible with that repo.  As we more cleanly separate the layers, we will review the\ncompatibility guarantee. We have a goal to make this easier to use in the future.\n\n\n## Where does it come from?\n\n`apiserver` is synced from https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apiserver.\nCode changes are made in that location, merged into `k8s.io/kubernetes` and later synced here.\n\n\n## Things you should *NOT* do\n\n 1. Directly modify any files under `pkg` in this repo.  Those are driven from `k8s.io/kubernetes/staging/src/k8s.io/apiserver`.\n 2. Expect compatibility.  This repo is changing quickly in direct support of\n    Kubernetes and the API isn't yet stable enough for API guarantees.", "created": "2017-01-13T18:25:19Z"}}, {"model": "service.repomodels", "pk": 13, "fields": {"name": 3, "repo": "autoscaler", "read_me": "# Kubernetes Autoscaler\n\n[![Release Charts](https://github.com/kubernetes/autoscaler/actions/workflows/release.yaml/badge.svg)](https://github.com/kubernetes/autoscaler/actions/workflows/release.yaml) [![Tests](https://github.com/kubernetes/autoscaler/actions/workflows/ci.yaml/badge.svg)](https://github.com/kubernetes/autoscaler/actions/workflows/ci.yaml) [![GoDoc Widget]][GoDoc]\n\nThis repository contains autoscaling-related components for Kubernetes.\n\n## What's inside\n\n[Cluster Autoscaler](https://github.com/kubernetes/autoscaler/tree/master/cluster-autoscaler) - a component that automatically adjusts the size of a Kubernetes\nCluster so that all pods have a place to run and there are no unneeded nodes. Supports several public cloud providers. Version 1.0 (GA) was released with kubernetes 1.8.\n\n[Vertical Pod Autoscaler](https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler) - a set of components that automatically adjust the\namount of CPU and memory requested by pods running in the Kubernetes Cluster. Current state - beta.\n\n[Addon Resizer](https://github.com/kubernetes/autoscaler/tree/master/addon-resizer) - a simplified version of vertical pod autoscaler that modifies\nresource requests of a deployment based on the number of nodes in the Kubernetes Cluster. Current state - beta.\n\n[Charts](https://github.com/kubernetes/autoscaler/tree/master/charts) - Supported Helm charts for components above.\n\n## Contact Info\n\nInterested in autoscaling? Want to talk? Have questions, concerns or great ideas?\n\nPlease join us on #sig-autoscaling at https://kubernetes.slack.com/, or join one\nof our weekly meetings.  See [the Kubernetes Community Repo](https://github.com/kubernetes/community/blob/master/sig-autoscaling/README.md) for more information.\n\n## Getting the Code\n\nFork the repository in the cloud:\n1. Visit https://github.com/kubernetes/autoscaler\n1. Click Fork button (top right) to establish a cloud-based fork.\n\nThe code must be checked out as a subdirectory of `k8s.io`, and not `github.com`.\n\n```shell\nmkdir -p $GOPATH/src/k8s.io\ncd $GOPATH/src/k8s.io\n# Replace \"$YOUR_GITHUB_USERNAME\" below with your github username\ngit clone https://github.com/$YOUR_GITHUB_USERNAME/autoscaler.git\ncd autoscaler\n```\n\nPlease refer to Kubernetes [Github workflow guide] for more details.\n\n[GoDoc]: https://godoc.org/k8s.io/autoscaler\n[GoDoc Widget]: https://godoc.org/k8s.io/autoscaler?status.svg\n[Github workflow guide]: https://github.com/kubernetes/community/blob/master/contributors/guide/github-workflow.md", "created": "2017-04-12T00:03:40Z"}}, {"model": "service.repomodels", "pk": 14, "fields": {"name": 3, "repo": "cli-runtime", "read_me": "# cli-runtime\n\nSet of helpers for creating kubectl commands, as well as kubectl plugins.\n\n\n## Purpose\n\nThis library is a shared dependency for clients to work with Kubernetes API infrastructure which allows\nto maintain kubectl compatible behavior.  Its first consumer is `k8s.io/kubectl`.\n\n\n## Compatibility\n\nThere are *NO compatibility guarantees* for this repository.  It is in direct support of Kubernetes, so branches\nwill track Kubernetes and be compatible with that repo.  As we more cleanly separate the layers, we will review the\ncompatibility guarantee.\n\n\n## Where does it come from?\n\n`cli-runtime` is synced from https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cli-runtime.\nCode changes are made in that location, merged into `k8s.io/kubernetes` and later synced here.\n\n\n## Things you should *NOT* do\n\n 1. Add API types to this repo.  This is for the helpers, not for the types.\n 2. Directly modify any files under `pkg` in this repo.  Those are driven from `k8s.io/kubernetes/staging/src/k8s.io/cli-runtime`.\n 3. Expect compatibility.  This repo is direct support of Kubernetes and the API isn't yet stable enough for API guarantees.\n 4. Add any type that only makes sense only for `kubectl`.", "created": "2018-09-06T23:27:43Z"}}, {"model": "service.repomodels", "pk": 15, "fields": {"name": 3, "repo": "client-go", "read_me": "# client-go\n\nGo clients for talking to a [kubernetes](http://kubernetes.io/) cluster.\n\nWe recommend using the `v0.x.y` tags for Kubernetes releases >= `v1.17.0` and\n`kubernetes-1.x.y` tags for Kubernetes releases < `v1.17.0`.\n\nThe fastest way to add this library to a project is to run `go get k8s.io/client-go@latest` with go1.16+.\nSee [INSTALL.md](/INSTALL.md) for detailed installation instructions and troubleshooting.\n\n[![GoDocWidget]][GoDocReference]\n\n[GoDocWidget]: https://godoc.org/k8s.io/client-go?status.svg\n[GoDocReference]:https://godoc.org/k8s.io/client-go \n\n## Table of Contents\n\n- [What's included](#whats-included)\n- [Versioning](#versioning)\n  - [Compatibility: your code <-> client-go](#compatibility-your-code---client-go)\n  - [Compatibility: client-go <-> Kubernetes clusters](#compatibility-client-go---kubernetes-clusters)\n  - [Compatibility matrix](#compatibility-matrix)\n  - [Why do the 1.4 and 1.5 branch contain top-level folder named after the version?](#why-do-the-14-and-15-branch-contain-top-level-folder-named-after-the-version)\n- [Kubernetes tags](#kubernetes-tags)\n- [How to get it](#how-to-get-it)\n- [How to use it](#how-to-use-it)\n- [Dependency management](#dependency-management)\n- [Contributing code](#contributing-code)\n\n### What's included\n\n* The `kubernetes` package contains the clientset to access Kubernetes API.\n* The `discovery` package is used to discover APIs supported by a Kubernetes API server.\n* The `dynamic` package contains a dynamic client that can perform generic operations on arbitrary Kubernetes API objects.\n* The `plugin/pkg/client/auth` packages contain optional authentication plugins for obtaining credentials from external sources.\n* The `transport` package is used to set up auth and start a connection.\n* The `tools/cache` package is useful for writing controllers.\n\n### Versioning\n\n- For each `v1.x.y` Kubernetes release, the major version (first digit)\nwould remain `0`.\n\n- Bugfixes will result in the patch version (third digit) changing. PRs that are\ncherry-picked into an older Kubernetes release branch will result in an update\nto the corresponding branch in `client-go`, with a corresponding new tag\nchanging the patch version.\n\n#### Branches and tags.\n\nWe will create a new branch and tag for each increment in the minor version\nnumber. We will create only a new tag for each increment in the patch\nversion number. See [semver](http://semver.org/) for definitions of major,\nminor, and patch.\n\nThe HEAD of the master branch in client-go will track the HEAD of the master\nbranch in the main Kubernetes repo.\n\n#### Compatibility: your code <-> client-go\n\nThe `v0.x.y` tags indicate that go APIs may change in incompatible ways in\ndifferent versions.\n\nSee [INSTALL.md](INSTALL.md) for guidelines on requiring a specific\nversion of client-go.\n\n#### Compatibility: client-go <-> Kubernetes clusters\n\nSince Kubernetes is backwards compatible with clients, older `client-go`\nversions will work with many different Kubernetes cluster versions.\n\nWe will backport bugfixes--but not new features--into older versions of\n`client-go`.\n\n\n#### Compatibility matrix\n\n|                               | Kubernetes 1.15 | Kubernetes 1.16 | Kubernetes 1.17 | Kubernetes 1.18 | Kubernetes 1.19 | Kubernetes 1.20 |\n|-------------------------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|\n| `kubernetes-1.15.0`           | ✓               | +-              | +-              | +-              | +-              | +-              |\n| `kubernetes-1.16.0`           | +-              | ✓               | +-              | +-              | +-              | +-              |\n| `kubernetes-1.17.0`/`v0.17.0` | +-              | +-              | ✓               | +-              | +-              | +-              |\n| `kubernetes-1.18.0`/`v0.18.0` | +-              | +-              | +-              | ✓               | +-              | +-              |\n| `kubernetes-1.19.0`/`v0.19.0` | +-              | +-              | +-              | +-              | ✓               | +-              |\n| `kubernetes-1.20.0`/`v0.20.0` | +-              | +-              | +-              | +-              | +-              | ✓               |\n| `HEAD`                        | +-              | +-              | +-              | +-              | +-              | +-              |\n\nKey:\n\n* `✓` Exactly the same features / API objects in both client-go and the Kubernetes\n  version.\n* `+` client-go has features or API objects that may not be present in the\n  Kubernetes cluster, either due to that client-go has additional new API, or\n  that the server has removed old API. However, everything they have in\n  common (i.e., most APIs) will work. Please note that alpha APIs may vanish or\n  change significantly in a single release.\n* `-` The Kubernetes cluster has features the client-go library can't use,\n  either due to the server has additional new API, or that client-go has\n  removed old API. However, everything they share in common (i.e., most APIs)\n  will work.\n\nSee the [CHANGELOG](./CHANGELOG.md) for a detailed description of changes\nbetween client-go versions.\n\n| Branch         | Canonical source code location       | Maintenance status            |\n|----------------|--------------------------------------|-------------------------------|\n| `release-1.4`  | Kubernetes main repo, 1.4 branch     | = -                           |\n| `release-1.5`  | Kubernetes main repo, 1.5 branch     | = -                           |\n| `release-2.0`  | Kubernetes main repo, 1.5 branch     | = -                           |\n| `release-3.0`  | Kubernetes main repo, 1.6 branch     | = -                           |\n| `release-4.0`  | Kubernetes main repo, 1.7 branch     | = -                           |\n| `release-5.0`  | Kubernetes main repo, 1.8 branch     | = -                           |\n| `release-6.0`  | Kubernetes main repo, 1.9 branch     | = -                           |\n| `release-7.0`  | Kubernetes main repo, 1.10 branch    | = -                           |\n| `release-8.0`  | Kubernetes main repo, 1.11 branch    | =-                            |\n| `release-9.0`  | Kubernetes main repo, 1.12 branch    | =-                            |\n| `release-10.0` | Kubernetes main repo, 1.13 branch    | =-                            |\n| `release-11.0` | Kubernetes main repo, 1.14 branch    | =-                            |\n| `release-12.0` | Kubernetes main repo, 1.15 branch    | =-                            |\n| `release-13.0` | Kubernetes main repo, 1.16 branch    | =-                            |\n| `release-14.0` | Kubernetes main repo, 1.17 branch    | ✓                             |\n| `release-1.18` | Kubernetes main repo, 1.18 branch    | ✓                             |\n| `release-1.19` | Kubernetes main repo, 1.19 branch    | ✓                             |\n| `release-1.20` | Kubernetes main repo, 1.20 branch    | ✓                             |\n| client-go HEAD | Kubernetes main repo, master branch  | ✓                             |\n\nKey:\n\n* `✓` Changes in main Kubernetes repo are actively published to client-go by a bot\n* `=` Maintenance is manual, only severe security bugs will be patched.\n* `-` Deprecated; please upgrade.\n\n#### Deprecation policy\n\nWe will maintain branches for at least six months after their first stable tag\nis cut. (E.g., the clock for the release-2.0 branch started ticking when we\ntagged v2.0.0, not when we made the first alpha.) This policy applies to\nevery version greater than or equal to 2.0.\n\n#### Why do the 1.4 and 1.5 branch contain top-level folder named after the version?\n\nFor the initial release of client-go, we thought it would be easiest to keep\nseparate directories for each minor version. That soon proved to be a mistake.\nWe are keeping the top-level folders in the 1.4 and 1.5 branches so that\nexisting users won't be broken.\n\n### Kubernetes tags\n\nThis repository is still a mirror of\n[k8s.io/kubernetes/staging/src/client-go](https://github.com/kubernetes/kubernetes/tree/master/staging/src/k8s.io/client-go),\nthe code development is still done in the staging area.\n\nSince Kubernetes `v1.8.0`, when syncing the code from the staging area,\nwe also sync the Kubernetes version tags to client-go, prefixed with\n`kubernetes-`. From Kubernetes `v1.17.0`, we also create matching semver\n`v0.x.y` tags for each `v1.x.y` Kubernetes release.\n\nFor example, if you check out the `kubernetes-1.17.0` or the `v0.17.0` tag in\nclient-go, the code you get is exactly the same as if you check out the `v1.17.0`\ntag in Kubernetes, and change directory to `staging/src/k8s.io/client-go`.\n\nThe purpose is to let users quickly find matching commits among published repos,\nlike [sample-apiserver](https://github.com/kubernetes/sample-apiserver),\n[apiextension-apiserver](https://github.com/kubernetes/apiextensions-apiserver),\netc. The Kubernetes version tag does NOT claim any backwards compatibility\nguarantees for client-go. Please check the [semantic versions](#versioning) if\nyou care about backwards compatibility.\n\n### How to get it\n\nTo get the latest version, use go1.16+ and fetch using the `go get` command. For example:\n\n```\ngo get k8s.io/client-go@latest\n```\n\nTo get a specific version, use go1.11+ and fetch the desired version using the `go get` command. For example:\n\n```\ngo get k8s.io/client-go@v0.20.4\n```\n\nSee [INSTALL.md](/INSTALL.md) for detailed instructions and troubleshooting.\n\n### How to use it\n\nIf your application runs in a Pod in the cluster, please refer to the\nin-cluster [example](examples/in-cluster-client-configuration), otherwise please\nrefer to the out-of-cluster [example](examples/out-of-cluster-client-configuration).\n\n### Dependency management\n\nFor details on how to correctly use a dependency management for installing client-go, please see [INSTALL.md](INSTALL.md).\n\n### Contributing code\nPlease send pull requests against the client packages in the Kubernetes main [repository](https://github.com/kubernetes/kubernetes). Changes in the staging area will be published to this repository every day.", "created": "2016-08-25T00:19:38Z"}}, {"model": "service.repomodels", "pk": 16, "fields": {"name": 3, "repo": "cloud-provider", "read_me": "# cloud-provider\n\nThis repository defines the cloud-provider interface and mechanism to initialize\na cloud-provider implementation into Kubernetes. Currently multiple processes\nuse this code although the intent is that it will eventually only be cloud\ncontroller manager.\n\n**Note:** go-get or vendor this package as `k8s.io/cloud-provider`.\n\n## Purpose\n\nThis library is a shared dependency for processes which need to be able to\nintegrate with cloud-provider specific functionality.\n\n## Compatibility\n\nCloud Providers are expected to keep the HEAD of their implementations in sync\nwith the HEAD of this repository.\n\n## Where does it come from?\n\n`cloud-provider` is synced from\nhttps://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cloud-provider.\nCode changes are made in that location, merged into k8s.io/kubernetes and\nlater synced here.\n\n## Things you should NOT do\n\n 1. Add an cloud provider specific code to this repo.\n 2. Directly modify anything under vendor/k8s.io/cloud-provider in this repo. Those are driven from `k8s.io/kubernetes/staging/src/k8s.io/cloud-provider`.\n 3. Make interface changes without first discussing them with\n    sig-cloudprovider.", "created": "2018-10-08T23:27:25Z"}}, {"model": "service.repomodels", "pk": 17, "fields": {"name": 3, "repo": "cloud-provider-alibaba-cloud", "read_me": "# Kubernetes Cloud Controller Manager for Alibaba Cloud\n\nThank you for visiting the cloud-provider-alibaba-cloud repository!\n\n\n`cloud-provider-alibaba-cloud` is the external Kubernetes cloud controller manager implementation for Alibaba Cloud. Running `cloud-provider-alibaba-cloud` allows you build your kubernetes clusters leverage on many cloud services on Alibaba Cloud. You can read more about Kubernetes cloud controller manager [here](https://kubernetes.io/docs/tasks/administer-cluster/running-cloud-controller/).\n\n## Development\n\nTest project with command ```make test``` and Build an image with command ```make image```\n\n## QuickStart\n\n- [Getting-started](docs/getting-started.md)\n- [Usage Guide](docs/usage.md)\n\n\n## Community, discussion, contribution, and support\n\nLearn how to engage with the Kubernetes community on the [community page](http://kubernetes.io/community/).\n\nYou can reach the maintainers of this project at:\n\n- [Slack channel](https://kubernetes.slack.com/messages/sig-cloud-provider)\n- [Mailing list](https://groups.google.com/forum/#!forum/kubernetes-sig-cloud-provider)\n\n### Code of conduct\n\nParticipation in the Kubernetes community is governed by the [Kubernetes Code of Conduct](code-of-conduct.md).\n\n## Testing\nSee more info in page [Test](https://github.com/kubernetes/cloud-provider-alibaba-cloud/tree/master/docs/testing.md)", "created": "2018-09-17T19:49:52Z"}}, {"model": "service.repomodels", "pk": 18, "fields": {"name": 3, "repo": "cloud-provider-aws", "read_me": "404: Not Found", "created": "2018-03-21T06:09:43Z"}}, {"model": "service.repomodels", "pk": 19, "fields": {"name": 3, "repo": "cloud-provider-gcp", "read_me": "# cloud-provider-gcp\n\n## Publishing gcp-controller-manager image\n\nThis command will build and publish\n`gcr.io/k8s-image-staging/gcp-controller-manager:latest`:\n\n```\nbazel run //cmd/gcp-controller-manager:publish\n```\n\nEnvironment variables `IMAGE_REGISTRY`, `IMAGE_REPO` and `IMAGE_TAG` can be\nused to override destination GCR repository and tag.\n\nThis command will build and publish\n`example.com/my-repo/gcp-controller-manager:v1`:\n\n\n```\nIMAGE_REGISTRY=example.com IMAGE_REPO=my-repo IMAGE_TAG=v1 bazel run //cmd/gcp-controller-manager:publish\n```\n\n# Cross-compiling\n\nSelecting the target platform is done with the `--platforms` option with `bazel`.\nThis command builds release tarballs for Windows:\n\n```\nbazel build --platforms=@io_bazel_rules_go//go/toolchain:windows_amd64 //release:release-tars\n```\n\nThis command explicitly targets Linux as the target platform:\n\n```\nbazel build --platforms=@io_bazel_rules_go//go/toolchain:linux_amd64 //release:release-tars\n```\n\n\n# Dependency management\n\nDependencies are managed using [Go modules](https://github.com/golang/go/wiki/Modules) (`go mod` subcommands).\n\nNote that builds are done with Bazel and not the Go tool. Don't follow public\nGo module docs, instead use instructions in this readme.\n\n## Working within GOPATH\n\nIf you work within `GOPATH`, `go mod` will error out unless you do one of:\n\n- move repo outside of GOPATH (it should \"just work\")\n- set env var `GO111MODULE=on`\n\n## Add a new dependency\n\n```\ngo get github.com/new/dependency && ./tools/update_vendor.sh\n```\n\n## Update an existing dependency\n\n```\ngo get -u github.com/existing/dependency && ./tools/update_vendor.sh\n```\n\n## Update all dependencies\n\n```\ngo get -u && ./tools/update_vendor.sh\n```\n\nNote that this most likely won't work due to cross-dependency issues or repos\nnot implementing modules correctly.\n\n## Clean up unused dependencies\n\n```\ngo mod tidy && ./tools/update_vendor.sh\n```\n\n# Bazel\n\nBazel is required to build and release cloud-provider-gcp.\n\nTo install:\n\n```sh\ngo get github.com/bazelbuild/bazelisk\nalias bazel=bazelisk\n```\n\nTo re-generate `BUILD` files:\n\n```sh\ntools/update_bazel.sh\n```", "created": "2018-03-21T07:01:09Z"}}, {"model": "service.repomodels", "pk": 20, "fields": {"name": 3, "repo": "cloud-provider-openstack", "read_me": "# Cloud Provider OpenStack\n\nThank you for visiting the `Cloud Provider OpenStack` repository!\n\nThis Repository hosts various plugins relevant to OpenStack and Kubernetes Integration\n\n* [OpenStack Cloud Controller Manager](/docs/openstack-cloud-controller-manager/using-openstack-cloud-controller-manager.md/)\n* [Octavia Ingress Controller](/docs/octavia-ingress-controller/using-octavia-ingress-controller.md/)\n* [Cinder CSI Plugin](/docs/cinder-csi-plugin/using-cinder-csi-plugin.md/)\n* [Keystone Webhook Authentication Authorization](/docs/keystone-auth/using-keystone-webhook-authenticator-and-authorizer.md/)\n* [Client Keystone](/docs/keystone-auth/using-client-keystone-auth.md/)\n* [Manila CSI Plugin](/docs/manila-csi-plugin/using-manila-csi-plugin.md/)\n* [Barbican KMS Plugin](/docs/barbican-kms-plugin/using-barbican-kms-plugin.md/)\n* [Magnum Auto Healer](/docs/magnum-auto-healer/using-magnum-auto-healer.md/)\n\n**NOTE:**\n\n* Cinder Standalone Provisioner, Manila Provisioner and Cinder FlexVolume Driver were removed since release v1.18.0.\n* Version 1.17 was the last release of Manila Provisioner, which is unmaintained from now on. Due to dependency issues, we removed the code from master but it is still accessible in the [release-1.17](https://github.com/kubernetes/cloud-provider-openstack/tree/release-1.17) branch. Please consider migrating to Manila CSI Plugin.\n\n## Developing\n\nRefer to [Getting Started Guide](/docs/developers-guide.md/) for setting up development environment and contributing.\n\n## Contact\n\nPlease join us on [Kubernetes provider-openstack slack channel](https://kubernetes.slack.com/messages/provider-openstack)\n\nProject Co-Leads:\n* @lxkong - Lingxian Kong\n* @ramineni - Anusha Ramineni\n* @chrigl - Christoph Glaubitz\n\n## License\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.", "created": "2018-03-21T06:46:07Z"}}, {"model": "service.repomodels", "pk": 21, "fields": {"name": 3, "repo": "cloud-provider-sample", "read_me": "# cloud-provider-sample\n\nThis is a sample of how to build a cloud provider repo. This will build a Kubernetes image which deploys on bare metal.\nIt uses the fake cloud provider and consumes the [kubernetes/kubernetes](https://github.com/kubernetes/kubernetes)\nbuild artifact and adds to it the Cloud Controller Manager and CSI Daemon Set.\n\n**Note:** This is currently a work in progress.\n\n## Community, discussion, contribution, and support\n\nLearn how to engage with the Kubernetes community on the [community page](http://kubernetes.io/community/).\n\nYou can reach the maintainers of this project at:\n\n- [Slack](https://kubernetes.slack.com/messages/sig-cloud-provider)\n- [Mailing List](https://groups.google.com/forum/#!forum/kubernetes-sig-cloud-provider)\n\n### Code of conduct\n\nParticipation in the Kubernetes community is governed by the [Kubernetes Code of Conduct](code-of-conduct.md).", "created": "2018-12-22T00:27:09Z"}}, {"model": "service.repomodels", "pk": 22, "fields": {"name": 3, "repo": "cloud-provider-vsphere", "read_me": "# Kubernetes vSphere Cloud Provider\n\n![GitHub release (latest SemVer including pre-releases](https://img.shields.io/github/v/release/kubernetes/cloud-provider-vsphere?include_prereleases)\n![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)\n\n![image](/docs/images/vsphere_kubernetes_logo.png)\n\n## vSphere Cloud Controller Manager\n\nThis repository contains the [Kubernetes cloud-controller-manager](https://kubernetes.io/docs/concepts/architecture/cloud-controller/) for vSphere.\n\nThis project replaces the deprecated in-tree vSphere cloud provider located within the [Kubernetes repository](https://github.com/kubernetes/kubernetes/tree/master/staging/src/k8s.io/legacy-cloud-providers/vsphere). If you want to create issues or pull requests for the in-tree cloud provider, please go to the [Kubernetes repository](https://github.com/kubernetes/kubernetes).\n\nThere is ongoing work for refactoring cloud providers out of the upstream repository. For more details, please check [this KEP](https://github.com/kubernetes/enhancements/blob/master/keps/sig-cloud-provider/20180530-cloud-controller-manager.md).\n\n## Compatibility with Kubernetes\n\nThe vSphere cloud provider is released with a specific semantic version `MAJOR.MINOR.PATCH` that correlates with the Kubernetes upstream version. Compatibility with a new Kubernetes version requires upgrading existing cloud provider components since compatibility is ONLY guaranteed between a specific release and its corresponding Kubernetes version.\n\nIn the future, the major and minor versions of releases should be equivalent to the compatible upstream Kubernetes release, and the patch version is used for bug fixes pertaining to specific Kubernetes releases. See [the external cloud provider versioning KEP](https://github.com/kubernetes/enhancements/tree/master/keps/sig-cloud-provider/1771-versioning-policy-for-external-cloud-providers) for more details.\n\nVersion matrix:\n\n| Kubernetes Version | vSphere Cloud Provider Release Version | Cloud Provider Branch |\n| ----------- | ----------- | ----------- |\n| v1.20.X | v1.20.X | release-1.20 |\n| v1.19.X | v1.19.X | release-1.19 |\n| v1.18.X | v1.18.X | release-1.18 |\n\n## Quickstart\n\nGet started with Cloud controller manager for vSphere with Kubeadm with this [quickstart](https://cloud-provider-vsphere.sigs.k8s.io/tutorials/kubernetes-on-vsphere-with-kubeadm.html).\n\n## Quickstart using Helm\n\nGet started with Cloud controller manager for vSphere using Helm with this [Helm quickstart](https://github.com/kubernetes/cloud-provider-vsphere/blob/master/docs/book/tutorials/kubernetes-on-vsphere-with-helm.md).\n\n## Documentation\n\nDocumentation on how to install and use the Kubernetes vSphere Cloud Provider is located on the [docs site](https://cloud-provider-vsphere.sigs.k8s.io/).\n\n## Building the cloud provider\n\nThis section outlines how to build the cloud provider with and without Docker.\n\n### Building locally\n\nBuild locally with the following command:\n\n```shell\n$ git clone https://github.com/kubernetes/cloud-provider-vsphere && \\\n  make -C cloud-provider-vsphere\n```\n\nThe project uses [Go modules](https://github.com/golang/go/wiki/Modules) and:\n\n* Requires Go 1.11+\n* Should not be cloned into the `$GOPATH`\n\n### Building with Docker\n\nIt is also possible to build the cloud provider with Docker in order to ensure a clean build environment:\n\n```shell\n$ git clone https://github.com/kubernetes/cloud-provider-vsphere && \\\n  make -C cloud-provider-vsphere build-with-docker\n```\n\n## Container images\n\nOfficial releases of the vSphere Cloud Controller Manager container image can be found at:\n\n<https://gcr.io/cloud-provider-vsphere/cpi/release/manager>\n\nThe very latest builds from the tip of master, which may not be stable, can be found at:\n\n<https://gcr.io/cloud-provider-vsphere/cpi/ci/manager>\n\n## Contributing\n\nPlease see [CONTRIBUTING.md](CONTRIBUTING.md) for instructions on how to contribute.\n\n### vSphere storage support\n\nOut of tree cloud providers no longer provide native storage support. Instead, a\nContainer Storage Interface (CSI) driver is required. The vSphere CSI driver is\nlocated [here](https://github.com/kubernetes-sigs/vsphere-csi-driver).", "created": "2018-05-22T20:23:26Z"}}, {"model": "service.repomodels", "pk": 23, "fields": {"name": 3, "repo": "cluster-bootstrap", "read_me": "# cluster-bootstrap\n\nSet of constants and helpers in support of\nhttps://github.com/kubernetes/community/blob/master/contributors/design-proposals/cluster-lifecycle/bootstrap-discovery.md\n\n\n## Purpose\n\nCurrent user is kubeadm, the controller that cleans up the tokens, and the bootstrap authenticator.\n\n\n## Where does it come from?\n\n`cluster-bootstrap` is synced from https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/cluster-bootstrap.\nCode changes are made in that location, merged into `k8s.io/kubernetes` and later synced here.\n\n\n## Things you should *NOT* do\n\n 1. Add API types to this repo.  This is for the helpers, not for the types.\n 2. Directly modify any files under `token` in this repo.  Those are driven from `k8s.io/kubernetes/staging/src/k8s.io/cluster-bootstrap`.", "created": "2018-10-03T20:26:06Z"}}, {"model": "service.repomodels", "pk": 24, "fields": {"name": 3, "repo": "code-generator", "read_me": "# code-generator\n\nGolang code-generators used to implement [Kubernetes-style API types](https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md).\n\n## Purpose\n\nThese code-generators can be used\n- in the context of [CustomResourceDefinition](https://kubernetes.io/docs/tasks/access-kubernetes-api/extend-api-custom-resource-definitions/) to build native, versioned clients,\n  informers and other helpers\n- in the context of [User-provider API Servers](https://github.com/kubernetes/apiserver) to build conversions between internal and versioned types, defaulters, protobuf codecs,\n  internal and versioned clients and informers.\n\n## Resources\n- The example [sample controller](https://github.com/kubernetes/sample-controller) shows a code example of a controller that uses the clients, listers and informers generated by this library.\n- The article [Kubernetes Deep Dive: Code Generation for CustomResources](https://blog.openshift.com/kubernetes-deep-dive-code-generation-customresources/) gives a step by step instruction on how to use this library.\n\n## Compatibility\n\nHEAD of this repo will match HEAD of k8s.io/apiserver, k8s.io/apimachinery, and k8s.io/client-go.\n\n## Where does it come from?\n\n`code-generator` is synced from https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/code-generator.\nCode changes are made in that location, merged into `k8s.io/kubernetes` and later synced here.", "created": "2017-08-15T19:12:23Z"}}, {"model": "service.repomodels", "pk": 25, "fields": {"name": 3, "repo": "community", "read_me": "# Kubernetes Community\n\nWelcome to the Kubernetes community!\n\nThis is the starting point for joining and contributing to the Kubernetes community - improving docs, improving code, giving talks etc.\n\nTo learn more about the project structure and organization, please refer to [Project Governance] information.\n\n## Communicating\n\nThe [communication](communication/) page lists communication channels like chat,\nissues, mailing lists, conferences, etc.\n\nFor more specific topics, try a SIG.\n\n## Governance\n\nKubernetes has the following types of groups that are officially supported:\n\n* **Committees** are named sets of people that are chartered to take on sensitive topics.\n  This group is encouraged to be as open as possible while achieving its mission but, because of the nature of the topics discussed, private communications are allowed.\n  Examples of committees include the steering committee and things like security or code of conduct.\n* **Special Interest Groups (SIGs)** are persistent open groups that focus on a part of the project.\n  SIGs must have open and transparent proceedings.\n  Anyone is welcome to participate and contribute provided they follow the Kubernetes Code of Conduct.\n  The purpose of a SIG is to own and develop a set of **subprojects**.\n  * **Subprojects** Each SIG can have a set of subprojects.\n    These are smaller groups that can work independently.\n    Some subprojects will be part of the main Kubernetes deliverables while others will be more speculative and live in the `kubernetes-sigs` github org.\n* **Working Groups** are temporary groups that are formed to address issues that cross SIG boundaries.\n  Working groups do not own any code or other long term artifacts.\n  Working groups can report back and act through involved SIGs.\n* **User Groups** are groups for facilitating communication and discovery of information related to\n  topics that have long term relevance to large groups of Kubernetes users.\n  They do not have ownership of parts of the Kubernetes code base.\n\nSee the [full governance doc](governance.md) for more details on these groups.\n\nA SIG can have its own policy for contribution, described in a `README` or `CONTRIBUTING` file in the SIG folder in this repo (e.g. [sig-cli/CONTRIBUTING.md](sig-cli/CONTRIBUTING.md)), and its own mailing list, slack channel, etc.\n\nIf you want to edit details about a SIG (e.g. its weekly meeting time or its leads),\nplease follow [these instructions](./generator) that detail how our docs are auto-generated.\n\n## Learn to Build\n\nLinks in [contributors/devel/README.md](contributors/devel/README.md)\nlead to many relevant technical topics.\n\n## Contribute\n\nA first step to contributing is to pick from the [list of kubernetes SIGs](sig-list.md).\nStart attending SIG meetings, join the slack channel and subscribe to the mailing list.\nSIGs will often have a set of \"help wanted\" issues that can help new contributors get involved.\n\nThe [Contributor Guide](contributors/guide/README.md) provides detailed instruction on how to get your ideas and bug fixes seen and accepted, including:\n1. How to [file an issue]\n1. How to [find something to work on]\n1. How to [open a pull request]\n\n## Membership\n\nWe encourage all contributors to become members. We aim to grow an active, healthy community of contributors, reviewers, and code owners. Learn more about requirements and responsibilities of membership in our [Community Membership] page.\n\n[Project Governance]:/governance.md\n[Developer's Guide]: contributors/devel/development.md\n[Contributor Guide]:\ncontributors/guide/README.md\n[file an issue]:\ncontributors/guide/first-contribution.md#file-an-issue\n[find something to work on]:\ncontributors/guide/first-contribution.md#find-something-to-work-on\n[open a pull request]:\ncontributors/guide/contributing.md#opening-a-pull-request\n[Community Membership]:/community-membership.md", "created": "2016-05-03T03:36:05Z"}}, {"model": "service.repomodels", "pk": 26, "fields": {"name": 3, "repo": "component-base", "read_me": "## component-base\n\n## Purpose\n\nImplement KEP 32: https://github.com/kubernetes/enhancements/blob/master/keps/sig-cluster-lifecycle/wgs/783-component-base/README.md\n\nThe proposal is essentially about refactoring the Kubernetes core package structure in a way that all core components may share common code around:\n - ComponentConfig implementation\n - flag and command handling\n - HTTPS serving\n - delegated authn/z\n - logging.\n\n## Compatibility\n\nThere are *NO compatibility guarantees* for this repository, yet.  It is in direct support of Kubernetes, so branches\nwill track Kubernetes and be compatible with that repo.  As we more cleanly separate the layers, we will review the\ncompatibility guarantee. We have a goal to make this easier to use in the future.\n\n\n## Where does it come from?\n\nThis repository is synced from https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/component-base.\nCode changes are made in that location, merged into `k8s.io/kubernetes` and later synced here.\n\n## Things you should *NOT* do\n\n 1. Directly modify any files in this repo. Those are driven from `k8s.io/kubernetes/staging/src/k8s.io/component-base`.\n 2. Expect compatibility. This repo is changing quickly in direct support of Kubernetes.\n\n### OWNERS\n\nWG Component Standard is working on this refactoring process, which is happening incrementally, starting in the v1.14 cycle.\nSIG API Machinery and SIG Cluster Lifecycle owns the code.", "created": "2019-01-07T20:00:21Z"}}, {"model": "service.repomodels", "pk": 27, "fields": {"name": 3, "repo": "component-helpers", "read_me": "# component-helpers\n\nThis repository provides helpers primarily for core components (core components as described in [Create a k8s.io/component-base repo](https://github.com/kubernetes/enhancements/blob/master/keps/sig-cluster-lifecycle/wgs/783-component-base/README.md#component-definition)) which are required by at least two separate binaries in kubernetes org.\nYet, still with a high level of abstraction.\n\n`k8s.io/component-base` staging repository was considered as a candidate for hosting the helpers. Although, since the helpers are not required by the core components, the repository was deemed unsuitable.\n\nThe only allowed kubernetes dependencies are `k8s.io/apimachinery`, `k8s.io/api` and `k8s.io/client-go`.\n\n## Purpose\n\nOne of the goals is to provide a better location for helpers currently located under `k8s.io/kubernetes/pkg/apis`.\n\nRecent effort of moving [scheduling\n framework](https://kubernetes.io/docs/concepts/scheduling-eviction/scheduling-framework/) under\n`k8s.io/kube-scheduler` requires duplication of many helper functions\n(see [#91782](https://github.com/kubernetes/kubernetes/issues/91782) for more details).\nImporting the helpers from this repository allows to minimize or remove already existing duplication.\n\nAnother example is shared RBAC code which is blocking extracting kubectl to staging (see https://github.com/kubernetes/enhancements/issues/1020). This problem dates all the way back to December 2018 (see SIG-CLI call from December 19, 2018: https://docs.google.com/document/d/1r0YElcXt6G5mOWxwZiXgGu_X6he3F--wKwg-9UBc29I/edit?pli=1). Recently the topic was touched during sig-auth call (see https://docs.google.com/document/d/1woLGRoONE3EBVx-wTb4pvp4CI7tmLZ6lS26VTbosLKM/edit?ts=5ef3be6a#heading=h.etc9yylhln8x).\n\n## Compatibility\n\nThere are NO compatibility guarantees for this repository. It is in direct support of Kubernetes, so branches will track Kubernetes and be compatible with that repo. As we more cleanly separate the layers, we will review the compatibility guarantee.\n\n## Where does it come from?\n\nThis repo is synced from https://github.com/kubernetes/kubernetes/tree/master/staging/src/k8s.io/component-helpers.\nCode changes are made in that location, merged into `k8s.io/kubernetes` and later synced here by a bot.", "created": "2020-10-01T13:43:54Z"}}, {"model": "service.repomodels", "pk": 28, "fields": {"name": 3, "repo": "contributor-site", "read_me": "# Kubernetes Contributor Site\n\nThis repository contains the [Hugo][hugo] site and generator scripts for the\nKubernetes Contributor site. The published website is available at\nhttps://kubernetes.dev/ (served via Netlify).\n\n## Site content\n\nThe content for the Contributor Site is sourced from multiple locations.\nContent managed within this repository is generated from generated from [Markdown]\nfound within the [`content`][ct] directory. To update the site's content,\nmake changes to the Markdown sources and [submit a pull request][pr] to this\nrepository.\n\nSome content is externally sourced and changes to that must be made in the\noriginal location. A list of sources and their locations within the\n[`content`][ct] is available below:\n\n### External sources\n\n- **Source:** https://git.k8s.io/community/contributors/guide <br>\n  **Destination:** `/guide`\n- **Source:** https://github.com/cncf/foundation/blob/master/code-of-conduct.md <br>\n  **Destination:** `/code-of-conduct.md`\n- **Source:** https://git.k8s.io/sig-release/releases/release-1.18/README.md <br>\n  **Destination:** `/release.md`\n\n## Running the site locally\n\nTo develop site content, you can run the site locally using [Hugo][hugo] in\ntwo ways:\n\n1. [Inside a Docker container](#using-docker)\n2. [Natively](#natively) (not inside a Docker container)\n\nWhen you make changes to the site's content, Hugo will automatically update\nthe site and refresh your browser window.\n\n### Using Docker\n\nThe easiest and most cross-system-compatible way to run the Contributor\nSite is to use [Docker][docker]. To begin, create the docker image to be used\nwith generating the site by executing `make container-image`.\n\nTo ensure you can view the site with externally sourced content, run\n`make container-gen-content` before previewing the site by with\n`make container-serve`.\n\n\n### Natively\n\nFor instructions on installing and using Hugo, see the [Hugo Documentation][hugo-docs].\nNote that the extended version is required.\n\nIn addition to Hugo, the [postcss-cli] and [autoprefixer] JavaScript packages are\nrequired. These can be installed via the [Node Package Manager] (`npm`) from a\nrecent version of [nodejs] with `npm install -g postcss-cli autoprefixer`.\n\nThe Contributor Site uses the [docsy] theme. It is included as a [git submodule].\nTo fetch docsy and it's requirements, run the command:\n```\ngit submodule update --init --recursive --depth 1\n```\n\nTo ensure you can view the site with externally sourced content, run\n`make gen-content` before previewing the site by with `make server`.\n\n**NOTE to OSX Users**\n\n The `hack/gen-content.sh` script requires the gnu version\nof base packages such as `find`, `grep`, and `sed`. \n```\nbrew install coreutils findutils grep gnu-sed gnu-tar make readlink\n```\nYou will then need to update your path to include these:\n```\nexport PATH=\"/usr/local/opt/coreutils/libexec/gnubin:$PATH\"\n```\n\n\n## Community, discussion, contribution, and support\n\nThis project is managed by [SIG Contributor Experience][sig-contribex] as a\npart of [KEP-0005][kep-0005]\n\nYou can reach the maintainers of this project at:\n\n- [Slack][sig-contribex-slack]\n- [Mailing List][sig-contribex-list]\n\n## Evolution of this site:\n\nWe’re building out this site in real-time! Want to join us and help? Here’s what we have in store for next iterations:\n\n* [x] An Events page showcasing all current and future happenings within the Kubernetes community. We hope to launch this feature by November 2019. Want to help us hit this target? Help us [work on this project](https://github.com/kubernetes-sigs/contributor-site/issues/15) by forking the repo and submitting a pull request!\n* [x] Contributor guide/handbook: Feature launch date estimated November 2019\n* [ ] Developers' guide/handbook: Feature launch date estimated April 2020\n* [ ] Role Board: Feature launch date estimated April 2020\n* [ ] Directory of Kubernetes SIGs and other community groups\n* [x] Pathways to success for [new Kubernetes contributors](https://git.k8s.io/community/community-membership.md) and mentoring programs\n* [ ] Workshop videos\n\n### Code of conduct\n\nParticipation in the Kubernetes community is governed by the\n[Kubernetes Code of Conduct](code-of-conduct.md).\n\n[hugo]: https://gohugo.io/\n[Markdown]: https://www.markdownguide.org/\n[ct]: ./content/\n[pr]: https://help.github.com/en/articles/about-pull-requests\n[hugo-docs]: https://gohugo.io/getting-started/installing\n[frontmatter]: https://gohugo.io/content-management/front-matter/\n[docker]: https://www.docker.com/get-started\n[sig-contribex]: https://git.k8s.io/community/sig-contributor-experience/README.md\n[sig-contribex-slack]: http://slack.k8s.io/#sig-contribex\n[sig-contribex-list]: https://groups.google.com/forum/#!forum/kubernetes-sig-contribex\n[kep-0005]: https://git.k8s.io/enhancements/keps/sig-contributor-experience/0005-contributor-site.md\n[docsy]: https://docsy.dev\n[postcss-cli]: https://postcss.org/\n[autoprefixer]: https://github.com/postcss/autoprefixer\n[git submodule]: https://git-scm.com/book/en/v2/Git-Tools-Submodules", "created": "2018-07-30T22:41:38Z"}}, {"model": "service.repomodels", "pk": 29, "fields": {"name": 3, "repo": "controller-manager", "read_me": "# Controller-manager\n\n## Purpose\n\nThis library contains common code for controller managers. Principally its for\nthe Kube-Controller-Manager and Cloud-Controller-Manager. However other\ncontroller managers are welcome to use this code.\n\n\n## Compatibility\n\nThere are *NO compatibility guarantees* for this repository, yet.  It is in direct support of Kubernetes, so branches\nwill track Kubernetes and be compatible with that repo.  As we more cleanly separate the layers, we will review the\ncompatibility guarantee. We have a goal to make this easier to use in the future.\n\n\n## Where does it come from?\n\nThis package comes from the common code between kube-controller-manager and\ncloud-controller-manager. The intent is for it to contain our current\nunderstanding of the right way to build a controller manager. There are legacy\naspects of these controller managers which should be cleaned before adding them\nhere.\n`controller-manager` is synced from https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/controller-manager.\nCode changes are made in that location, merged into `k8s.io/kubernetes` and later synced here.\n\n\n## Things you should *NOT* do\n\n 1. Directly modify any files under `pkg` in this repo.  Those are driven from `k8s.io/kubernetes/staging/src/k8s.io/controller-manager`.\n 2. Expect compatibility.  This repo is currently changing rapidly in direct support of\n    Kubernetes and the controller-manager processes and the cloud provider\n    extraction effort.", "created": "2020-05-26T17:49:46Z"}}, {"model": "service.repomodels", "pk": 30, "fields": {"name": 3, "repo": "cri-api", "read_me": "## Purpose\n\nThis repository contains the definitions for the Container Runtime Interface (CRI).\nCRI is a plugin interface which enables kubelet to use a wide variety of container runtimes,\nwithout the need to recompile. CRI consists of a protocol buffers and gRPC API.\n\n## Community, discussion, contribution, and support\n\nLearn how to engage with the Kubernetes community on the [community\npage](http://kubernetes.io/community/).\n\nYou can reach the maintainers of this repository at:\n\n- Slack: #sig-node (on https://kubernetes.slack.com -- get an\n  invite at slack.kubernetes.io)\n- Mailing List:\n  https://groups.google.com/forum/#!forum/kubernetes-sig-node\n\n### Code of Conduct\n\nParticipation in the Kubernetes community is governed by the [Kubernetes\nCode of Conduct](code-of-conduct.md).\n\n### Contibution Guidelines\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for more information.", "created": "2019-03-26T08:22:50Z"}}, {"model": "service.repomodels", "pk": 31, "fields": {"name": 3, "repo": "csi-api", "read_me": "## Purpose\n\nThis repository contains type definitions and client code for the CSI\nAPIs that Kubernetes makes use of.\n\nConsumers of the CSI APIs can make use of this repository to access\nimplementations of the APIs.\n\n## Community, discussion, contribution, and support\n\nLearn how to engage with the Kubernetes community on the [community\npage](http://kubernetes.io/community/).\n\nYou can reach the maintainers of this repository at:\n\n- Slack: #sig-storage (on https://kubernetes.slack.com -- get an\n  invite at slack.kubernetes.io)\n- Mailing List:\n  https://groups.google.com/forum/#!forum/kubernetes-sig-storage\n\n### Code of Conduct\n\nParticipation in the Kubernetes community is governed by the [Kubernetes\nCode of Conduct](code-of-conduct.md).\n\n### Contibution Guidelines\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for more information.", "created": "2018-08-22T22:50:18Z"}}, {"model": "service.repomodels", "pk": 32, "fields": {"name": 3, "repo": "csi-translation-lib", "read_me": "## Purpose\n\nThis repository contains functions to be consumed by various Kubernetes and\nout-of-tree CSI components like external provisioner to facilitate migration of\ncode from Kubernetes In-tree plugin code to CSI plugin repositories.\n\nConsumers of this repository can make use of functions like `TranslateToCSI` and\n`TranslateToInTree` functions to translate PV sources.\n\n## Community, discussion, contribution, and support\n\nLearn how to engage with the Kubernetes community on the [community\npage](http://kubernetes.io/community/).\n\nYou can reach the maintainers of this repository at:\n\n- Slack: #sig-storage (on https://kubernetes.slack.com -- get an\n  invite at slack.kubernetes.io)\n- Mailing List:\n  https://groups.google.com/forum/#!forum/kubernetes-sig-storage\n\n### Code of Conduct\n\nParticipation in the Kubernetes community is governed by the [Kubernetes\nCode of Conduct](code-of-conduct.md).\n\n### Contibution Guidelines\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for more information.", "created": "2019-01-09T19:54:01Z"}}, {"model": "service.repomodels", "pk": 33, "fields": {"name": 3, "repo": "dashboard", "read_me": "# Kubernetes Dashboard\n\n[![Continuous Integration](https://github.com/kubernetes/dashboard/workflows/Continuous%20Integration/badge.svg)](https://github.com/kubernetes/dashboard/actions?query=workflow%3A%22Continuous+Integration%22)\n[![Continuous Deployment](https://github.com/kubernetes/dashboard/workflows/Continuous%20Deployment/badge.svg)](https://github.com/kubernetes/dashboard/actions?query=workflow%3A%22Continuous+Deployment%22)\n[![Go Report Card](https://goreportcard.com/badge/github.com/kubernetes/dashboard)](https://goreportcard.com/report/github.com/kubernetes/dashboard)\n[![Coverage Status](https://codecov.io/github/kubernetes/dashboard/coverage.svg?branch=master)](https://codecov.io/github/kubernetes/dashboard?branch=master)\n[![GitHub release](https://img.shields.io/github/release/kubernetes/dashboard.svg)](https://github.com/kubernetes/dashboard/releases/latest)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/kubernetes/dashboard/blob/master/LICENSE)\n\nKubernetes Dashboard is a general purpose, web-based UI for Kubernetes clusters. It allows users to manage applications running in the cluster and troubleshoot them, as well as manage the cluster itself.\n\n![Dashboard UI workloads page](docs/images/dashboard-ui.png)\n\n## Getting Started\n\n**IMPORTANT:** Read the [Access Control](docs/user/access-control/README.md) guide before performing any further steps. The default Dashboard deployment contains a minimal set of RBAC privileges needed to run.\n\n### Install\n\nTo deploy Dashboard, execute following command:\n\n```shell\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.3.1/aio/deploy/recommended.yaml\n```\n\nAlternatively, you can install Dashboard using Helm as described at [`https://artifacthub.io/packages/helm/k8s-dashboard/kubernetes-dashboard`](https://artifacthub.io/packages/helm/k8s-dashboard/kubernetes-dashboard).\n\n### Access\n\nTo access Dashboard from your local workstation you must create a secure channel to your Kubernetes cluster. Run the following command:\n\n```shell\nkubectl proxy\n```\nNow access Dashboard at:\n\n[`http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/`](\nhttp://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/).\n\n## Create An Authentication Token (RBAC)\nTo find out how to create sample user and log in follow [Creating sample user](docs/user/access-control/creating-sample-user.md) guide.\n\n**NOTE:**\n* Kubeconfig Authentication method does not support external identity providers or certificate-based authentication.\n* [Metrics-Server](https://github.com/kubernetes-sigs/metrics-server) has to be running in the cluster for the metrics and graphs to be available. Read more about it in [Integrations](docs/user/integrations.md) guide.\n\n## Documentation\n\nDashboard documentation can be found on [docs](docs/README.md) directory which contains:\n\n* [Common](docs/common/README.md): Entry-level overview.\n* [User Guide](docs/user/README.md): [Installation](docs/user/installation.md), [Accessing Dashboard](docs/user/accessing-dashboard/README.md) and more for users.\n* [Developer Guide](docs/developer/README.md): [Getting Started](docs/developer/getting-started.md), [Dependency Management](docs/developer/dependency-management.md) and more for anyone interested in contributing.\n\n## Community, discussion, contribution, and support\n\nLearn how to engage with the Kubernetes community on the [community page](http://kubernetes.io/community/).\n\nYou can reach the maintainers of this project at:\n\n* [**#sig-ui on Kubernetes Slack**](https://kubernetes.slack.com)\n* [**kubernetes-sig-ui mailing list** ](https://groups.google.com/forum/#!forum/kubernetes-sig-ui)\n* [**Issue tracker**](https://github.com/kubernetes/dashboard/issues)\n* [**SIG info**](https://github.com/kubernetes/community/tree/master/sig-ui)\n* [**Roles**](ROLES.md)\n\n### Contribution\n\nLearn how to start contribution on the [Contributing Guidline](CONTRIBUTING.md).\n\n### Code of conduct\n\nParticipation in the Kubernetes community is governed by the [Kubernetes Code of Conduct](code-of-conduct.md).\n\n## License\n\n[Apache License 2.0](https://github.com/kubernetes/dashboard/blob/master/LICENSE)\n\n----\n_Copyright 2019 [The Kubernetes Dashboard Authors](https://github.com/kubernetes/dashboard/graphs/contributors)_", "created": "2015-10-15T23:09:14Z"}}, {"model": "service.repomodels", "pk": 34, "fields": {"name": 3, "repo": "dns", "read_me": "# Kubernetes DNS\n\n[![Build Status](https://travis-ci.org/kubernetes/dns.svg?branch=master)](https://travis-ci.org/kubernetes/dns)\n[![Coverage Status](https://coveralls.io/repos/github/kubernetes/dns/badge.svg?branch=master)](https://coveralls.io/github/kubernetes/dns?branch=master)\n[![Go Report Card](https://goreportcard.com/badge/github.com/kubernetes/dns)](https://goreportcard.com/report/github.com/kubernetes/dns)\n\nThis is the repository for [Kubernetes DNS](http://kubernetes.io/docs/admin/dns/).\n\n## Images\n\n* [kube-dns](http://kubernetes.io/docs/admin/dns/)\n* [sidecar](docs/sidecar/README.md)\n* [dnsmasq](images/dnsmasq)\n* [node-cache](https://kubernetes.io/docs/tasks/administer-cluster/nodelocaldns/)\n\n## Building\n\n`make` targets:\n\n| target | description |\n| ---- | ---- |\n|all, build   | build all binaries |\n|test         | run unit tests |\n|containers   | build the containers |\n|images-clean | clear image build artifacts from workdir |\n|push         | push containers to the registry |\n|help         | this help message |\n|version      | show package version |\n|{build,containers,push}-ARCH | do action for specific ARCH |\n|all-{build,containers,push}  | do action for all ARCH |\n|only-push-BINARY             | push just BINARY |\n\n* Setting `VERBOSE=1` will show additional build logging.\n* Setting `VERSION` will override the container version tag.\n\n\n## Release process\n\n1. Build and test (`make images-clean`; `make build`; `make containers`; `make test`). \n2. To build just the node-cache container, use `make containers CONTAINER_BINARIES=node-cache`.\n3. The same steps are executed via the presubmit script `presubmits.sh` which is run by the [test-infra prow job.](https://github.com/kubernetes/test-infra/blob/88cd2798f36010e071a30c9827f90e647b59fc65/config/jobs/kubernetes/sig-network/sig-network-misc.yaml#L182)\n4. Update [go dependencies](docs/go-dependencies.md) if needed.\n5. Update the release tag. We use [semantic versioning](http://semver.org) to\n   name releases.\n4. Wait for container images to be pushed via cloudbuild yaml. This will be done automatically by\n   `k8s.io/test-infra/.../k8s-staging-dns.yaml`. A manual cloud build can be submitted via\n   `gcloud builds submit --config cloudbuild.yaml`, but this requires owner permissions in k8s-staging-dns project.\n   The automated job pushes images for all architectures and makes them available in `gcr.io/k8s-staging-dns`.\n   Status for build jobs can be checked at - https://k8s-testgrid.appspot.com/sig-network-dns#dns-push-images\n5. Promote the images to `gcr.io/k8s-artifacts-prod` using the process described\n   in [this](https://github.com/kubernetes/k8s.io/tree/main/k8s.gcr.io#image-promoter) link.\n   The image SHAs should be added to `images/k8s-staging-dns/images.yaml`.\n6. Submit a PR for the kubernetes/kubernetes repository to switch to the new\n   version of the containers.\n7. Images will be available in the repo k8s.gcr.io/dns/. The node-cache image with tag 1.15.14 can be found at k8s.gcr.io/dns/k8s-dns-node-cache:1.15.14. Older versions are at k8s.gcr.io/k8s-dns-node-cache:<TAG>", "created": "2016-12-15T21:20:19Z"}}, {"model": "service.repomodels", "pk": 35, "fields": {"name": 3, "repo": "enhancements", "read_me": "# Enhancement Tracking and Backlog\n\n[![PkgGoDev](https://pkg.go.dev/badge/k8s.io/enhancements)](https://pkg.go.dev/k8s.io/enhancements)\n[![Go Report Card](https://goreportcard.com/badge/k8s.io/enhancements)](https://goreportcard.com/report/k8s.io/enhancements)\n[![Slack](https://img.shields.io/badge/Slack-%23enhancements-blueviolet)](https://kubernetes.slack.com/archives/C1L57L91V)\n\n- [Is My Thing an Enhancement?](#is-my-thing-an-enhancement)\n- [When to Create a New Enhancement Issue](#when-to-create-a-new-enhancement-issue)\n- [Why Are Enhancements Tracked](#why-are-enhancements-tracked)\n- [When to Comment on an Enhancement Issue](#when-to-comment-on-an-enhancement-issue)\n- [Enhancements Tracking Spreadsheet](#enhancements-tracking-spreadsheet)\n- [Labels](#labels)\n- [Glossary](#glossary)\n\nEnhancement tracking repo for Kubernetes releases. Owned by [SIG Architecture](https://git.k8s.io/community/sig-architecture#enhancements).\n\nThis repo contains issues and [KEPs](https://git.k8s.io/enhancements/keps). These issues are umbrellas for new enhancements to be added to Kubernetes. An enhancement usually takes multiple releases to complete. And an enhancement can be tracked as backlog items before work begins. An enhancement may be filed once there is consensus in at least one [Kubernetes SIG](https://git.k8s.io/community/sig-list.md).\n\n## Is My Thing an Enhancement?\n\nWe are trying to figure out the exact shape of an enhancement. Until then, here are a few rough heuristics.\n\nAn enhancement is anything that:\n\n- a blog post would be written about after its release (ex. [minikube](https://kubernetes.io/blog/2016/07/minikube-easily-run-kubernetes-locally/), [StatefulSets](https://kubernetes.io/blog/2016/07/thousand-instances-of-cassandra-using-kubernetes-pet-set/), [rkt container runtime](https://kubernetes.io/blog/2016/07/rktnetes-brings-rkt-container-engine-to-kubernetes/))\n- requires multiple parties/SIGs/owners participating to complete (ex. GPU scheduling [API, Core, & Node], StatefulSets [Storage & API])\n- will be graduating from one stage to another (ex. alpha to beta, beta to GA)\n- needs significant effort or changes Kubernetes in a significant way (ex. something that would take 10 person-weeks to implement, introduce or redesign a system component, or introduces API changes)\n- impacts the UX or operation of Kubernetes substantially such that engineers using Kubernetes will need retraining\n- users will notice and come to rely on\n\nIt is unlikely an enhancement if it is:\n- implemented using `CustomResourceDefinition` and/or in https://github.com/kubernetes/contrib\n- fixing a flaky test\n- refactoring code\n- performance improvements, which are only visible to users as faster API operations, or faster control loops\n- adding error messages or events\n\nIf you are not sure, ask someone in the SIG where you initially circulated the idea. If they aren't sure, jump into\n[#enhancements](https://kubernetes.slack.com/messages/enhancements/) on Slack or ping someone listed in [OWNERS](https://github.com/kubernetes/enhancements/blob/master/OWNERS).\n\n## When to Create a New Enhancement Issue\n\nCreate an [issue](https://github.com/kubernetes/enhancements/issues/new) in this repository once you:\n- have circulated your idea to see if there is interest\n   - through Community Meetings, SIG meetings, SIG mailing lists, or an issue in github.com/kubernetes/kubernetes\n- (optionally) have done a prototype in your own fork\n- have identified people who agree to work on the enhancement\n  - many enhancements will take several releases to progress through Alpha, Beta, and Stable stages\n  - you and your team should be prepared to work on the approx. 9mo - 1 year that it takes to progress to Stable status\n- are ready to be the project manager for the enhancement\n\n## Why Are Enhancements Tracked\n\nOnce users adopt an enhancement, they expect to use it for an extended period of time. Therefore, we hold new enhancements to a high standard of conceptual integrity and require consistency with other parts of the system, thorough testing, and complete documentation. As the project grows, no single person can track whether all those requirements are met. \n\nThe development of an enhancement often spans three stages: Alpha, Beta, and Stable. Enhancement Tracking Issues provide a checklist that allows for different approvers for different aspects, and ensures that nothing is forgotten across the\ndevelopment lifetime of an enhancement.\n\n## When to Comment on an Enhancement Issue\n\nPlease comment on the enhancement issue to:\n- request a review or clarification on the process\n- update status of the enhancement effort\n- link to relevant issues in other repos\n\nPlease do not comment on the enhancement issue to:\n- discuss a detail of the design, code or docs. Use a linked-to-issue or PR for that\n\n## Enhancements Tracking Spreadsheet\n\nAll the enhancements from this repo are visualized in the Enhancements Tracking Spreadsheets.\n\nLinks:\n- [1.21 Milestone](https://bit.ly/k8s121-enhancements)\n- [1.20 Milestone](https://bit.ly/k8s-1-20-enhancements)\n- [1.19 Milestone](https://bit.ly/k8s-1-19-enhancements)\n- [1.18 Milestone](https://bit.ly/k8s-1-18-enhancements)\n- [1.17 Milestone](https://bit.ly/k8s117-enhancement-tracking)\n- [1.16 Milestone](https://bit.ly/k8s116-enhancement-tracking)\n- [1.15 Milestone](https://bit.ly/115-enhancements)\n- [1.14 Milestone](https://bit.ly/k8s114-enhancements)\n- [1.13 Milestone](https://bit.ly/k8s113-features)\n- [1.12 Milestone](https://bit.ly/k8s112-features)\n- [1.11 Milestone](https://bit.ly/k8s-features-111)\n\nProcedure:\n*TBA*\n\n## Labels\n\n| Label Name | Purpose | How to use this label | Who should use this label |\n| ------ | ------ | ------ | ------ |\n| `sig/foo` | Denotes the SIG(s) which owns this enhancement—e.g., `SIG Foo` | Set the label using the comment `/sig foo` (on a separate line) | Anyone |\n| `kind/feature` | Denotes that the issue should be tracked as an enhancement (all enhancement issues should be marked with this label) | Set the label using the comment `/kind feature` (on a separate line) | Anyone |\n| `tracked/yes` | Denotes an issue has been reviewed by a Feature Maintainer (SIG Release) and is actively tracked for the current milestone | Manually set | Feature Maintainers (SIG Release) ONLY |\n| `tracked/no` | Denotes an issue has been reviewed by a Feature Maintainer (SIG Release) and will not actively tracked for the current milestone | Manually set | Feature Maintainers (SIG Release) ONLY |\n| `stage/{alpha,beta,stable}` | Denotes the stage of an issue in the features process | Set the label using the comment `/stage alpha` (on a separate line) | Anyone |\n\n## Glossary\n\nPlease refer to the [Glossary](docs/glossary.md) for definition of any terminology and acronyms used in Enhancements subproject.", "created": "2016-05-02T18:51:30Z"}}, {"model": "service.repomodels", "pk": 36, "fields": {"name": 3, "repo": "examples", "read_me": "# Kubernetes Examples\n\nThis directory contains a number of examples of how to run real applications\nwith Kubernetes.\n\nRefer to the [Kubernetes documentation] for how to execute the tutorials.\n\n### Maintained Examples\n\nMaintained Examples are expected to be updated with every Kubernetes release, to\nuse the latest and greatest features, current guidelines and best practices,\nand to refresh command syntax, output, changed prerequisites, as needed.\n\n|Name | Description | Notable Features Used | Complexity Level|\n------------- | ------------- | ------------ | ------------ |\n|[Guestbook](guestbook/) | PHP app with Redis | Deployment, Service | Beginner |\n|[Guestbook-Go](guestbook-go/) | Go app with Redis | Deployment, Service | Beginner |\n|[WordPress](mysql-wordpress-pd/) | WordPress with MySQL | Deployment, Persistent Volume with Claim | Beginner|\n|[Cassandra](cassandra/) | Cloud Native Cassandra | Daemon Set, Stateful Set, Replication Controller | Intermediate\n\n> Note: Please add examples that are maintained to the list above.\n\nSee [Example Guidelines](guidelines.md) for a description of what goes\nin this directory, and what examples should contain.\n\n[Kubernetes documentation]: https://kubernetes.io/docs/tutorials/\n\n### Contributing\n\nPlease see [CONTRIBUTING.md](CONTRIBUTING.md) for instructions on how to contribute.", "created": "2017-04-18T19:52:08Z"}}, {"model": "service.repomodels", "pk": 37, "fields": {"name": 3, "repo": "frakti", "read_me": "# Frakti\n\n[![Build Status](https://travis-ci.org/kubernetes/frakti.svg?branch=master)](https://travis-ci.org/kubernetes/frakti) [![Go Report Card](https://goreportcard.com/badge/github.com/kubernetes/frakti)](https://goreportcard.com/report/github.com/kubernetes/frakti)\n\n## The hypervisor-based container runtime for Kubernetes\n\nFrakti lets Kubernetes run pods and containers directly inside hypervisors via [runV](https://github.com/hyperhq/runv). It is light weighted and portable, but can provide much stronger isolation with independent kernel than linux-namespace-based container runtimes.\n\n<p align=\"center\">\n  <img src=\"docs/images/frakti.png\" width=\"800\">\n</p>\n\nFrakti serves as a CRI container runtime server. Its endpoint should be configured while starting kubelet. In the deployment, [hyperd](https://github.com/hyperhq/hyperd) is also required as the API wrapper of runV.\n\n## QuickStart\n\nBuild frakti:\n\n```sh\nmkdir -p $GOPATH/src/k8s.io\ngit clone https://github.com/kubernetes/frakti.git $GOPATH/src/k8s.io/frakti\ncd $GOPATH/src/k8s.io/frakti\nmake && make install\n```\n\nInstall docker and hyperd:\n\n```sh\napt-get install qemu libvirt0 docker.io -y\ncurl -sSL https://hypercontainer.io/install | bash\n```\n\nConfigure hyperd with gRPC endpoint `127.0.0.1:22318`:\n\n```sh\ncat >/etc/hyper/config <<EOF\n# Boot kernel\nKernel=/var/lib/hyper/kernel\n# Boot initrd\nInitrd=/var/lib/hyper/hyper-initrd.img\n# Storage driver for hyperd, valid value includes devicemapper, overlay, and aufs\nStorageDriver=overlay\n# Hypervisor to run containers and pods, valid values are: libvirt, qemu, kvm, xen\nHypervisor=qemu\n# The tcp endpoint of gRPC API\ngRPCHost=127.0.0.1:22318\nEOF\n\nsystemctl restart hyperd\n```\n\nSetup CNI networking using bridge plugin\n\n```sh\n$ sudo mkdir -p /etc/cni/net.d  /opt/cni/bin\n$ git clone https://github.com/containernetworking/plugins $GOPATH/src/github.com/containernetworking/plugins\n$ cd $GOPATH/src/github.com/containernetworking/plugins\n$ ./build.sh\n$ sudo cp bin/* /opt/cni/bin/\n$ sudo sh -c 'cat >/etc/cni/net.d/10-mynet.conflist <<-EOF\n{\n    \"cniVersion\": \"0.3.1\",\n    \"name\": \"mynet\",\n    \"plugins\": [\n        {\n            \"type\": \"bridge\",\n            \"bridge\": \"cni0\",\n            \"isGateway\": true,\n            \"ipMasq\": true,\n            \"ipam\": {\n                \"type\": \"host-local\",\n                \"subnet\": \"10.30.0.0/16\",\n                \"routes\": [\n                    { \"dst\": \"0.0.0.0/0\"   }\n                ]\n            }\n        },\n        {\n            \"type\": \"portmap\",\n            \"capabilities\": {\"portMappings\": true},\n            \"snat\": true\n        }\n    ]\n}\nEOF'\n$ sudo sh -c 'cat >/etc/cni/net.d/99-loopback.conf <<-EOF\n{\n    \"cniVersion\": \"0.3.1\",\n    \"type\": \"loopback\"\n}\nEOF'\n```\n\nThen start frakti:\n\n```sh\nfrakti --v=3 --logtostderr --listen=/var/run/frakti.sock --hyper-endpoint=127.0.0.1:22318 &\n```\n\nFinally, start kubernetes with frakti runtime:\n\n```sh\ncd $GOPATH/src/k8s.io/kubernetes\nhack/install-etcd.sh\nexport PATH=$GOPATH/src/k8s.io/kubernetes/third_party/etcd:${PATH}\nexport KUBERNETES_PROVIDER=local\nexport CONTAINER_RUNTIME=remote\nexport CONTAINER_RUNTIME_ENDPOINT=/var/run/frakti.sock\nhack/local-up-cluster.sh\n```\n\nTo start using the cluster, open up another terminal and run:\n\n```sh\ncd $GOPATH/src/k8s.io/kubernetes\nexport KUBECONFIG=/var/run/kubernetes/admin.kubeconfig\ncluster/kubectl.sh\n```\n\n## Documentation\n\nFurther information could be found at:\n\n- [Deploying](docs/deploy.md)\n- [End-to-end testing](docs/e2e-tests.md)\n- [Kubelet container runtime API](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/node/runtime-client-server.md)\n- [runV](https://github.com/hyperhq/runv)\n- [hyperd](https://github.com/hyperhq/hyperd)\n- [The blog on k8s.io about Hypernetes](http://kubernetes.io/blog/2016/05/hypernetes-security-and-multi-tenancy-in-kubernetes.html)\n\n## The differences between `frakti` with other Linux container runtimes\n\n- Better Security and Isolation\n  - frakti provides hardware virtualization based Pod sandbox for Kubernetes.\n- No Kernel Sharing\n  - Every Pod in frakti has its own kernel (Bring Your Own Kernel), LinuxKit image support is on the way\n- Match k8s QoS Classes.\n  - frakti is best to run Pod with `resources.limits` being set (i.e. all Guaranteed and most Burstable Pods), otherwise, frakti will set default resource limit for Pod.\n  - This behavior is configurable by `--defaultCPUNum` and `--defaultMemoryMB`  of frakti\n- Mixed Runtimes Mode.\n  - frakti support mixed runtimes on the same Node (runV and Docker). We recommend user to run `BestEffort` Pods, daemon Pods in Docker runtime by adding `runtime.frakti.alpha.kubernetes.io/OSContainer` annotation to them.\n  - Additionally, special cases like privileged Pods, host network Pods etc will be automatically run in Docker runtime.\n- Persistent Volume\n  - All k8s PVs are supported in frakti.\n  - **Block device as volume directly**: in this way, frakti will mount block device directly to VM based Pod, which gives you better performance than first approach, now we support: \n    - Cinder RBD: [Stackube](https://github.com/openstack/stackube) for an example (k8s + frakti + Cinder + Keystone + Neutron).\n    - GCE Persistent Disk\n- Cross-host Networking\n  - frakti is fully based on CNI (bridge mode only for now), so there's no big difference here.\n  - Network plug-ins like `Flannel` & `Calico` can work out-of-box with `frakti` based Kubernetes.\n\nBesides the lists above, all behaviors of frakti are 100% the same with other Linux container runtimes like Docker, please enjoy it!\n\n## License\n\nThe work done has been licensed under Apache License 2.0.The license file can be found [here](LICENSE). You can find out more about license at [http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0).", "created": "2016-06-27T16:04:23Z"}}, {"model": "service.repomodels", "pk": 38, "fields": {"name": 4, "repo": "Bash-Script", "read_me": "# Bash-Script", "created": "2021-08-19T07:49:38Z"}}, {"model": "service.repomodels", "pk": 39, "fields": {"name": 4, "repo": "Proavto_resume", "read_me": "# Proavto_resume\nПроект Проавто включает в себя:\n1) Приложение proauto (основное сайт https://proproauto.ru/).\n2) API к сайту api_for_proauto.\n3) Telegram бот tg_bot (https://t.me/proproauto_bot)\nСайт истории автомобилей содержит информацию о  развитии автомобилестроения!", "created": "2021-06-29T13:19:42Z"}}, {"model": "service.repomodels", "pk": 40, "fields": {"name": 4, "repo": "pythontutor", "read_me": "# pythontutor\nОтветы на некоторые задачи с портала ПИТОНТЬЮТОР\nЭто моё видение решения. Оно проходит все тесты!\nПредставлено в информационных целях", "created": "2020-11-26T13:20:48Z"}}, {"model": "service.repomodels", "pk": 41, "fields": {"name": 4, "repo": "Table", "read_me": "404: Not Found", "created": "2021-05-18T07:51:31Z"}}, {"model": "service.repomodels", "pk": 42, "fields": {"name": 4, "repo": "User_Survey", "read_me": "# User_Survey\n## Задача ##\nCпроектировать и разработать API для системы опросов пользователей.\n\nФункционал для администратора системы:\n\n- авторизация в системе (регистрация не нужна)\n- добавление/изменение/удаление опросов. Атрибуты опроса: название, дата старта, дата окончания, описание. После создания поле \"дата старта\" у опроса менять нельзя\n- добавление/изменение/удаление вопросов в опросе. Атрибуты вопросов: текст вопроса, тип вопроса (ответ текстом, ответ с выбором одного варианта, ответ с выбором нескольких вариантов)\n\nФункционал для пользователей системы:\n\n- получение списка активных опросов\n- прохождение опроса: опросы можно проходить анонимно, в качестве идентификатора пользователя в API передаётся числовой ID, по которому сохраняются ответы пользователя на вопросы; один пользователь может участвовать в любом количестве опросов\n- получение пройденных пользователем опросов с детализацией по ответам (что выбрано) по ID уникальному пользователя\n## Управление ##\n### Запуск ###\n\n1) Выполняем команду: \n```\n  docker-compose up -d\n ```\n    \n2) Переходим по адресу\n```\n  http://127.0.0.1:8000/api/\n  ```\n  Пользователь админ уже добавлен.\n >User: admin\n >\n >Pass: admin\n### Авторизация пользователя ###\n1) Отправьте POST запрос, по адресу:\n```\n  http://127.0.0.1:8000/api/token/\n```\nВ теле JSON:\n```\n    {\n      \"username\": \"\",\n      \"password\": \"\"\n  }\n```\nНа выходе получите token access  и refresh. \n\n2) Для обновления TOKEN\n Отправьте POST запрос:\n```\n  http://127.0.0.1:8000/api/token/refresh/\n```\n В теле JSON:\n```\n  {\n    \"refresh\": \"\"\n  }\n```\n3) Для авторизации:\n в Hefders добавит ключ Authorization с значением Bearer <token  access>\n### API ###\n\n1)Добавление опроса.\n\n ```   \n   http://127.0.0.1:8000/api/survey_create/\n```    \n  * Метод добавляет опрос\n   Пример POST запроса в теле JSON.  \n   ```\n   {\n      \"name\": \"опрос 3\",\n      \"start_date\": \"2021-07-03T17:10:00+03:00\",\n      \"end_date\": \"2021-07-10T17:14:00+03:00\",\n      \"survey_description\": \"Опрос 3\"\n    }\n ```\n2) Обновить/удалить опрос.\n ```\n   http://127.0.0.1:8000/survey_update_del/[int:survey_id]\n ```\n   * [int:survey_id] - id опроса\n    \n  Метод для обновления удаления опроса\n  Для обновления пример PATCH запроса в теле JSON\n  ```\n    {\n      \"name\": \"опрос 3\",\n      \"end_date\": \"2021-07-10T17:14:00+03:00\",\n      \"survey_description\": \"Опрос 3\"\n      }\n   ```\n\n  #### Поле start_date неизменяемое. ####\n\n3)  Возвращает список активных  Опросов.\n```\n  http://127.0.0.1:8000/api/survey_list/\n```   \n\n4) Для добавления опроса в опрос.\n```\n   http://127.0.0.1:8000/api/question_create/\n```  \n   Метод добавляет вопрос в Опрос\n   Пример POST запроса в теле JSON:\n   ```\n    {\n    \"survey\": 1,\n    \"question\": \"Вопрос 1\",\n    \"question_type\": \"\"CHOICE\"\n    }\n   ```\n   #### В поле \"survey\": 1, передаётся id существующего опроса. ####\n5)Обновить/удалить вопрос.\n ```\n    http://127.0.0.1:8000/api/question_update_del/[int:question_id]\n ```\n   * [int:question_id] id вопроса.\n    \n   Метод для обновления удаления вопроса.\n   Для обновления пример.\n   PATCH запроса в теле JSON.\n  ```\n    {\n    \"survey\": 1,\n    \"question\": \"Вопрос 1\",\n    \"question_type\": \"CHOICE\",\n    \"variants\": []\n    }\n  ```\n  #### При изменении поля \"survey\" можно перенести вопрос в другой опрос.\n  #### По умолчанию поле \"question_type\": \"TEXT\" ####\n  #### \"variants\": [] - это список вариантов ответов, если такие, имеются.\n \n6) Добавить ответ.\n```\n    http://127.0.0.1:8000/apianswer_create/\n ```\n    Метод добавляет вопрос в Опрос.\n    Пример POST запроса в теле JSON\n   ```\n    {\n      \"user_id\": 1,\n      \"survey\": 1,\n      \"quest\": 5,\n      \"variant\": 4,\n      \"variant_text\": null\n    }\n   ```\n7) Список ответов пользователя.\n```\n    http://127.0.0.1:8000/api/answer_view/[int:user_id]\n```  \n    * [int:user_id] - ID пользователя.", "created": "2021-07-04T11:30:22Z"}}, {"model": "service.repomodels", "pk": 43, "fields": {"name": 4, "repo": "Web_forms_validation", "read_me": "# Web_forms_validation #\n## Запуск  ##\n1) Сохраняем проект на локальный компьютер.\n2) Запуск тестов:\n```\ndocker-compose run form_test python manage.py test\n```\n3) Запуск приложения \n```\ndocker-compose up\n```\nСсылка для проверки (можно отправить просто из браузера):\n```\nhttp://127.0.0.1:8000/api/template/?User_name=name&User_email=aq@aq.ru&User_phone=79188962231&User_date=28.07.2021\n```", "created": "2021-08-02T08:18:17Z"}}]